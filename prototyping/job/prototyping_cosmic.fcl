#include "services_microboone.fcl"


BEGIN_PROLOG

prototype_analyzer:
{ 
    module_type:                "Prototyping"
    pfp_producer:               "pandoraCosmic"
    is_lite:                    true
    is_data:                    false
}

END_PROLOG


process_name: Prototyping      #The process name must NOT contain any underscores

source: 
{
  module_type: RootInput
  maxEvents:   -1
}

services: {
  #@table::microboone_basic_services                        # This includes most services you might need
  # Extra services like LArFFT, includes basic
  @table::microboone_services_reco
  @table::microboone_simulation_services

  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService: { fileName: "Prototyping_Cosmic.root" }
  #Timing:       {}
  #SimpleMemoryCheck:     { ignoreTotal: 1 }               # default is one
  RandomNumberGenerator: {}                                # ART native random number generator
   
  message:                       @local::standard_info
  TPCEnergyCalibService:         @local::microboone_tpcenergycalib_service
  #BackTracker:                   @local::microboone_backtracker

}

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3
services.DetectorClocksService.TrigModuleName:               "daq"


physics: {

  producers: {
     # ParameterSets for zero or more producer modules
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
     wouterana: @local::prototype_analyzer
  }

  filters: {
     # ParameterSets for zero or more filter modules
  }

  # analyzeIt:[
  #        
  #           ]
  path0: [ wouterana ]
  stream: [ out0 ]

  trigger_paths: [ ]
  end_paths:    [ path0 ]

}

outputs.out0: { module_type: RootOutput
                fileName:    "output.root" 
                dataTier:    "hits" 
                streamName:  "all" 
                SelectEvents: [ path0 ]
                compressionLevel: 1
              }
